function book(titel, author, pages, read) {
  this.titel = titel;
  this.author = author;
  this.pages = pages;
  this.read = "Read" || "Not read" || "in progress";
  this.info = function () {
    return `${titel} by ${author}, ${pages} pages. ${read}`;
  };
}
book.prototype.sayHello = function () {
  return `Hi, i am a good book by ${this.author}`;
};

const dailyStoic = new book("Daily Stoic", "Ryan Holiday", 366, "in progress");
const youCantHurtMe = new book(
  "You Can't Hurt me",
  "David Goggins",
  444,
  "in progress"
);
console.log(dailyStoic.info());
console.log(dailyStoic.sayHello());
console.log(youCantHurtMe.info());
console.log(Object.getPrototypeOf(dailyStoic) === book.prototype);
console.log(Object.getPrototypeOf(youCantHurtMe) === book.prototype);
console.log(dailyStoic.valueOf());
console.log(dailyStoic.hasOwnProperty("valueOf"));
console.log(Object.prototype.hasOwnProperty("valueOf"));

function Person(name) {
  this.name = name;
}

Person.prototype.sayGreet = function () {
  console.log(`Hello, I am ${this.name}`);
};

function player(name, team) {
  this.name = name;
  this.team = team;
}

player.prototype.getTeam = function () {
  console.log(`my team is ${this.team}`);
};
Object.getPrototypeOf(player.prototype);
Object.setPrototypeOf(player.prototype, Person.prototype);
Object.getPrototypeOf(player.prototype);

const player1 = new player("nico", "Uruguay");
const player2 = new player("Milo", "USA");
console.log(player1.sayGreet());
console.log(player2.sayGreet());

console.log(player1.getTeam());
console.log(player2.getTeam());
function Person(name, age) {
  this.name = name;
  this.age = age;
  this.activity = this.activity;
}

const user1 = new Person("nico", 34, "lifting");
const user2 = new Person("didi", 3, "jumping");

Person.prototype.sayHi = function (name, age, workOuts) {
  return `Hi, my name is ${this.name}. I am ${this.age}.`;
};
Person.prototype.work = (name, activity) => {
  return `${this.name} enjoys`;
};
console.log(user1.sayHi());

let x = {};
console.log(Object.getPrototypeOf(x));
console.log(x.__proto__);
function User(name, age, gender) {
  this.name = name;
  this.age = age;
  this.gender = gender;
  this.userKey = function () {
    const char = "abcdefghijklmnopqrstuvwxyz123456789!@#$%^&*()_+{}[]=?.".split(
      ""
    );
    let pasword = [];
    for (let i = 0; i < 10; i++) {
      let random = Math.floor(Math.random() * char.length);
      pasword.push(char[random]);
    }
    return `Your new password: "${pasword.join("")}"`;
  };
}

const me = new User("nico", 34, "Male");
console.log(me);
console.log(me.userKey());
User.prototype.greet = function () {
  return `Hi, my name is ${this.name}. I am ${this.age} years old`;
};
console.log(me.greet());
console.log(Object.getPrototypeOf(User));

// role-playing game.

function Hero(name, level) {
  this.name = name;
  this.level = level;
}

function Warrior(name, level, weapon) {
  Hero.call(this, name, level);
  this.weapon = weapon;
}

function Healer(name, level, spell) {
  Hero.call(this, name, level);
  this.spell = spell;
}

Hero.prototype.greet = function () {
  return `${this.name} say Hi!`;
};

Warrior.prototype.attack = function () {
  return `${this.name} attacks with ${this.weapon}`;
};

Healer.prototype.heal = function () {
  return `${this.name} casts ${this.spell}`;
};

const hero1 = new Hero("didi wu tintin", 1);
const warrior1 = new Warrior("nico", 1, "Axe");
const healer1 = new Healer("siggy", 1, "Black Magik");
Object.setPrototypeOf(Warrior.prototype, Hero.prototype);
Object.setPrototypeOf(Healer.prototype, Hero.prototype);

console.log(hero1);
console.log(warrior1);
console.log(warrior1.attack());
console.log(healer1);
console.log(healer1.heal());
console.log(warrior1.greet());
console.log(healer1.greet());
console.log(Object.getPrototypeOf(hero1));
console.log(Object.getPrototypeOf(Hero));


let animal = {
  eats: true,
  walk() {
    return "walking";
  },
};

let rabbit = {
  jumps: true,
  __proto__: animal,
};

let longEar = {
  earLength: 10,
  __proto__: animal,
};

rabbit.walk = function () {
  return "rabbit! Bounce Bounce";
};
// rabbit.__proto__ = animal;
// console.log(rabbit.eats);
// console.log(rabbit.walk());
console.log(longEar.eats);
console.log(longEar.walk());
console.log(rabbit.walk());